$x = "It Works! YAY";

$y = 0;

for($y = 0; $y < 10; $y++)
{
    print($y);
}

function includeTest($z)
{
    print("INCLUDE TEST");
    print("---");
    print($z);
    print($y);
    print("---");
}

function constTest()
{
    print("CONST TEST");
    print("---");
    const $xw = 123;
    print($xw);

    assert $xw == 123;

    print("---");
}

function arrayTest()
{
    print("ARRAY TEST");
    print("---");
    $r = [10];

    $r[3] = 12;

    $r[0] = 1 * 2 + $r[3] * 4;

    $r[4] = [20];

    $r[4][15] = 12345;

    $b = $r[3];

    $a = $r[4][15];

    $d = $r[0];

    print($r);
    print($b);
    print($a);
    print($d);

    assert $r[3] == 12;
    assert $r[4][15] == 12345;

    print("---");
}

function stringTest()
{
    print("STRING TEST");
    print("---");
    $d = "This is an interned string!";
    print($d);

    assert $d == "This is an interned string!";
    print("---");
}

$y = 123;

function moveToLocalTest()
{
    print("MOVE TO LOCAL TEST");
    print("---");

    $e = $y;
    print($y);
    assert $e == $y;

    $e = 0;
    $y = $e;
    print($y);
    print($e);
    assert $e == $y;

    print("---");
}

function dataTypeTest()
{
    print("DATA TYPE TEST");
    print("---");
    $a = float;
    $b = 3.75;
    print($a);
    print($b);
    print($b is $a);
    print($b is int);

    assert $b is $a;
    assert !($b is int);

    $d = int;
    $c = $b as $d;
    print($d);
    print($c);
    print($b);

    assert $c == 3;

    print("---");
}

function funcPointerTestChild($b, $c)
{
    print("HUZZAH!");
    return $b + $c;
}

$rtygh = function()
{
    print("DOOP");
};

function funcPointerTest()
{
    print("function pointer test");
    print("---");

    $a = @funcPointerTestChild;
    $b = 123;
    $c = 456;
    $d = $a($b, $c);
    $e = @print;
    $f = [10];
    $f[5] = [12];
    $f[5][2] = @print;

    assert $d == $b + $c;
    assert $a == @funcPointerTestChild;
    assert $e == @print;
    assert $f[5][2] == $e;

    $e($a);
    $e($b);
    $e($c);
    $e($d);
    $e($e);
    $f[5][2]($f[5][2]);
    @print($d);
    @print(function);

    $g = function($rt, $as, $we)
    {
        print("GOOD LORD!");
        return $rt + $as + $we;
    };

    assert $g(456, 789, 123) == 456 + 789 + 123;
    assert function($zxc, $vbn) { return $zxc - $vbn; }(10, 5) == 10 - 5;

    $rtygh();

    print("---");
}